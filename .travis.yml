#
# Bareflank Hypervisor
# Copyright (C) 2015 Assured Information Security, Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

#
# Configuration
#
language: cpp
dist: trusty

#
# Cache Dependencies
#
cache:
  directories:
  - ../cache

#
# Build Dependencies
#
before_script:

  #
  # Cache / Depends
  #
  - mkdir -p ../cache

  #
  # Build Enviornment
  #
  - mkdir -p build
  - cd build

  #
  # Update GCC
  #
  - |
    if [[ -f "/usr/bin/gcc-7" ]]; then
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 100
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 100
    fi

  - |
    if [[ -f "/usr/bin/gcc-8" ]]; then
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100
    fi

#
# Build Matrix
#
matrix:
  include:

  #
  # Doxygen
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
          - doxygen
    env:
      - TEST="Doxygen"
    script:
      - cd ..
      - doxygen .doxygen.txt
      - |
        if [[ -s doxygen_warnings.txt ]]; then
          echo "You must fix doxygen before submitting a pull request"
          echo ""
          cat doxygen_warnings.txt
          exit -1
        fi

  #
  # Git Check
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # Astyle Format
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - gcc-8
          - g++-8
          - clang-6.0
          - nasm
    env:
      - TEST="Format"
    script:
      - cmake -DCONFIG=travis_format ..
      - make astyle_x86_64-userspace-elf
      - make format
      - |
        if [[ -n $(git diff) ]]; then
          echo "You must run make format before submitting a pull request"
          echo ""
          git diff
          exit -1
        fi

  #
  # Clang Tidy
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - clang-6.0
          - clang-tidy-6.0
          - gcc-8
          - g++-8
          - nasm
    env:
      - TEST="Clang Tidy"
    script:
      - cmake -DCONFIG=travis_tidy ..
      - make -j3
      - make tidy

  #
  # Codecov
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - gcc-7
          - g++-7
          - clang-6.0
          - nasm
    env:
      - TEST="Codecov"
    script:
      - export LD_BIN=ld.gold
      - cmake -DCONFIG=travis_codecov ..
      - make -j3
      - make unittest
      - cd ..
      - bash <(curl -s https://codecov.io/bash)

  #
  # Google Address Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - gcc-8
          - g++-8
          - clang-6.0
          - nasm
    env:
      - TEST="Google Address Sanitizer"
    script:
      - cmake -DCONFIG=travis_asan ..
      - make -j3
      - make unittest

  #
  # Google Undefined Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - gcc-8
          - g++-8
          - clang-6.0
          - nasm
    env:
      - TEST="Google Undefined Sanitizer"
    script:
      - cmake -DCONFIG=travis_usan ..
      - make -j3
      - make unittest

  #
  # Clang 5.0 (Static Libraries)
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-5.0
        packages:
          - gcc-8
          - g++-8
          - clang-5.0
          - nasm
    env:
      - TEST="Clang 5.0 (Static Libraries)"
    script:
      - export CLANG_BIN=clang-5.0
      - cmake -DCONFIG=travis_static ..
      - make -j3

  #
  # Clang 6.0 (Static Libraries)
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - gcc-8
          - g++-8
          - clang-6.0
          - nasm
    env:
      - TEST="Clang 6.0 (Static Libraries)"
    script:
      - export CLANG_BIN=clang-6.0
      - cmake -DCONFIG=travis_static ..
      - make -j3
