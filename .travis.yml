#
# Configuration
#

language: cpp

dist: trusty
sudo: required

#
# Global
#
env:
  global:
    - secure: "af7WejqMTjeh2jNz/WhtNZRbRqMDvvzUVAZOLulzkWV6U+VFMq4vn/RDM5P9SwyIjDUUwUqhnr9SEOkr33H7XjoSynG2alcnC27R5EshY0K6NvPmoWsECrVFr8M9J7w4NupbAh8a/e6TGeAVi5Pxc3rhn0TicL570JXrBYedkIXALmOT26URDqEpzrarXh5FmQvluvKoSrlLz2GCVw3S6FjRSS5AnGCDpgLvTJRSsAdHHdx+2tNG8iicNaAjn5+4cFoKwX1EfQJvoUMARAOM/qpz1tw04DgGO/Pu7uBhKUU0fCE0Sw2MkG8fmpm+HaCAzFm7OApYbhIYl7H/o4S3NL1vvMVAqg3DLF+/mfxJjW9TSvxiJXqILsA1lC8Ghxz7KKzdbNiKSUX0uUY6gq1MhJ9iySBsUVPeQwKmAbfge67IdY9lLOlYrFQma7JVap+ZwK9mozzW+w/MjHULYspLN6vi8s4zFBoEEga9CRv/jxmctf8eC6NJuFDtu8nPtEhywquzsnX/BY/YZkLGYr8wKXp6WL8vQWzRx5HCSg0suWFS3uPEMhq54IMZzrfP7TeCXF6nNUkOD63t2vllmx6diQi4jEV7zzORT3LaIW2Yirxg6p4mnUQXA8tWgEY1BDAGIzv1pGgu+qEWqHw7sWmjueN4UGAr0iokDP/V3UZIb5w="

#
# Build Matrix
#
matrix:
  include:

  #
  # Astyle
  #
  - os: linux
    env:
      - TEST="Astyle"
    script:
      - if [[ -n $(./tools/astyle/run.sh | grep Formatted) ]]; then echo "You must run astyle before submitting a pull request"; exit -1; fi

  #
  # Doxygen
  #
  - os: linux
    env:
      - TEST="Doxygen"
    script:
      - ./configure
      - make doxygen
      - if cat doc/doxygen_warnings.txt | grep FIX; then echo "You must fix doxygen before submitting a pull request"; exit -1; fi

  #
  # Git Check
  #
  - os: linux
    env:
      - TEST="Git Check"
    script:
      - if [[ -n $(git diff --check HEAD^ -- . ':!tools/patches/') ]]; then echo "You must remove whitespace before submitting a pull request"; exit -1; fi

  #
  # Coveralls
  #
  - os: linux
    env:
      - TEST="Coveralls"
    services:
      - docker
    before_install:
      - pip install --user git+git://github.com/eddyxu/cpp-coveralls.git
    install:
      - travis_wait 40 ./tools/scripts/setup_ubuntu.sh
    script:
      - COVERALLS=true make
      - make test
    after_success:
      - coveralls --build-root makefiles -e build_libbfc -e build_libcxx -e build_libcxxabi -e build_newlib -e source_libbfc -e source_libcxx -e source_libcxxabi -e source_llvm -e source_newlib -e sysroot -e bfdrivers/src/arch -e bfm/ioctl/arch -e bfvmm/src/intrinsics -e include/hippomocks.h -e include/detail -e include/json.h -e include/unittest.h -e include/new_delete.h -e include/gsl -e bfunwind --gcov-options '\-lp'

  #
  # Clang Tidy
  #
  - os: linux
    env:
      - TEST="Clang Tidy"
    services:
      - docker
    addons:
      apt:
        sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.8' ]
        packages: [ 'clang-3.8', 'clang-tidy-3.8' ]
    install:
      - travis_wait 40 ./tools/scripts/setup_ubuntu.sh
      - git clone https://github.com/rizsotto/bear.git
      - pushd bear; cmake .; make; sudo make install; popd
      - sudo ln -s /usr/bin/clang-tidy-3.8 /usr/bin/clang-tidy
    script:
      - STATIC_ANALYSIS_ENABLED=true bear make
      - make tidy

  #
  # Google Sanitizers
  #
  - os: linux
    env:
      - TEST="Google Sanitizers"
    services:
      - docker
    install:
      - travis_wait 40 ./tools/scripts/setup_ubuntu.sh
    script:
      - DYNAMIC_ANALYSIS_ENABLED=true make
      - make test

  #
  # Coverity
  #
  - os: linux
    env:
      - TEST="Coverity"
    before_install:
      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt
    addons:
      coverity_scan:
        project:
          name: "Bareflank/hypervisor"
          description: "Travis CI Build"
        notification_email: rianquinn@gmail.com
        build_command_prepend: "./tools/scripts/setup_ubuntu.sh"
        build_command: "STATIC_ANALYSIS_ENABLED=true make"
        branch_pattern: coverity_scan
    script:
      - echo "Done"

  #
  # Clang 3.8
  #
  - os: linux
    env:
      - TEST="Clang 3.8"
    services:
      - docker
    install:
      - travis_wait 40 ./tools/scripts/setup_ubuntu.sh --compiler clang_38
      - cat env.sh
    script:
      - make
      - make test

  #
  # Clang 3.9
  #
  - os: linux
    env:
      - TEST="Clang 3.9"
    services:
      - docker
    install:
      - travis_wait 40 ./tools/scripts/setup_ubuntu.sh --compiler clang_39
      - cat env.sh
    script:
      - make
      - make test
