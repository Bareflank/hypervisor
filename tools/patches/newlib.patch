diff -Naur source_newlib_original/newlib/libc/misc/fini.c source_newlib/newlib/libc/misc/fini.c
--- source_newlib_original/newlib/libc/misc/fini.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/misc/fini.c	2017-01-05 14:08:58.506911763 -0700
@@ -13,7 +13,7 @@
 /* Handle ELF .{pre_init,init,fini}_array sections.  */
 #include <sys/types.h>
 
-#ifdef HAVE_INITFINI_ARRAY
+#if 0
 extern void (*__fini_array_start []) (void) __attribute__((weak));
 extern void (*__fini_array_end []) (void) __attribute__((weak));
 
@@ -25,7 +25,7 @@
 {
   size_t count;
   size_t i;
-  
+
   count = __fini_array_end - __fini_array_start;
   for (i = count; i > 0; i--)
     __fini_array_start[i-1] ();
diff -Naur source_newlib_original/newlib/libc/misc/init.c source_newlib/newlib/libc/misc/init.c
--- source_newlib_original/newlib/libc/misc/init.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/misc/init.c	2017-01-05 14:08:58.506911763 -0700
@@ -13,7 +13,7 @@
 /* Handle ELF .{pre_init,init,fini}_array sections.  */
 #include <sys/types.h>
 
-#ifdef HAVE_INITFINI_ARRAY
+#if 0
 
 /* These magic symbols are provided by the linker.  */
 extern void (*__preinit_array_start []) (void) __attribute__((weak));
diff -Naur source_newlib_original/newlib/libc/stdlib/calloc.c source_newlib/newlib/libc/stdlib/calloc.c
--- source_newlib_original/newlib/libc/stdlib/calloc.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/stdlib/calloc.c	2017-01-05 14:08:58.442911996 -0700
@@ -1,5 +1,4 @@
 #ifdef MALLOC_PROVIDED
-int _dummy_calloc = 1;
 #else
 /*
 FUNCTION
@@ -15,7 +14,7 @@
 	#include <stdlib.h>
 	void *calloc(size_t <[n]>, size_t <[s]>);
 	void *_calloc_r(void *<[reent]>, size_t <[n]>, size_t <[s]>);
-	
+
 TRAD_SYNOPSIS
 	#include <stdlib.h>
 	char *calloc(<[n]>, <[s]>)
diff -Naur source_newlib_original/newlib/libc/stdlib/malloc.c source_newlib/newlib/libc/stdlib/malloc.c
--- source_newlib_original/newlib/libc/stdlib/malloc.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/stdlib/malloc.c	2017-01-05 14:08:58.442911996 -0700
@@ -9,9 +9,6 @@
    thread?  */
 
 #ifdef MALLOC_PROVIDED
-
-int _dummy_malloc = 1;
-
 #else
 
 /*
@@ -55,9 +52,9 @@
 	size_t malloc_usable_size(void *<[aptr]>);
 
 	void *_malloc_r(void *<[reent]>, size_t <[nbytes]>);
-	void *_realloc_r(void *<[reent]>, 
+	void *_realloc_r(void *<[reent]>,
                          void *<[aptr]>, size_t <[nbytes]>);
-	void *_reallocf_r(void *<[reent]>, 
+	void *_reallocf_r(void *<[reent]>,
                          void *<[aptr]>, size_t <[nbytes]>);
 	void _free_r(void *<[reent]>, void *<[aptr]>);
 
@@ -155,7 +152,7 @@
 requested from <<malloc>>, due to alignment or minimum size
 constraints.
 
-The alternate functions <<_malloc_r>>, <<_realloc_r>>, <<_reallocf_r>>, 
+The alternate functions <<_malloc_r>>, <<_realloc_r>>, <<_reallocf_r>>,
 <<_free_r>>, <<_memalign_r>>, and <<_malloc_usable_size_r>> are reentrant
 versions.  The extra argument <[reent]> is a pointer to a reentrancy structure.
 
diff -Naur source_newlib_original/newlib/libc/stdlib/mallocr.c source_newlib/newlib/libc/stdlib/mallocr.c
--- source_newlib_original/newlib/libc/stdlib/mallocr.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/stdlib/mallocr.c	2017-01-05 14:08:58.442911996 -0700
@@ -1,5 +1,4 @@
 #ifdef MALLOC_PROVIDED
-int _dummy_mallocr = 1;
 #else
 /* ---------- To make a malloc.h, start cutting here ------------ */
 
diff -Naur source_newlib_original/newlib/libc/stdlib/realloc.c source_newlib/newlib/libc/stdlib/realloc.c
--- source_newlib_original/newlib/libc/stdlib/realloc.c	2016-02-26 10:52:46.000000000 -0700
+++ source_newlib/newlib/libc/stdlib/realloc.c	2017-01-05 14:08:58.442911996 -0700
@@ -1,5 +1,4 @@
 #ifdef MALLOC_PROVIDED
-int _dummy_calloc = 1;
 #else
 /* realloc.c -- a wrapper for realloc_r.  */
 
